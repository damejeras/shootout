// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/JeremyLoy/config"
	"github.com/damejeras/hometask/internal/app"
	"github.com/damejeras/hometask/internal/control"
	"github.com/go-redis/redis/v8"
	"log"
)

// Injectors from wire.go:

func InitShooter(cfg *app.ShooterConfig) (*control.Shooter, error) {
	client, err := initRedisClient(cfg)
	if err != nil {
		return nil, err
	}
	logger := log.Default()
	shooter := control.NewShooter(cfg, client, logger)
	return shooter, nil
}

func initRedisClient(cfg *app.ShooterConfig) (*redis.Client, error) {
	options := initRedisConfig(cfg)
	client := redis.NewClient(options)
	return client, nil
}

// wire.go:

func initConfig() (*app.ShooterConfig, error) {
	var cfg app.ShooterConfig
	if err := config.FromEnv().To(&cfg); err != nil {
		return nil, err
	}

	return &cfg, nil
}

func initRedisConfig(cfg *app.ShooterConfig) *redis.Options {
	return &redis.Options{
		Addr: cfg.RedisAddr,
	}
}
